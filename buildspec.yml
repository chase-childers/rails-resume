version: 0.2


env:
  parameter-store:
    RAILS_MASTER_KEY: "rails-resume-master-key"
phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"    
  pre_build:
    commands:
      - echo Logging in to Amazon ECR.
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo "URI From ENV Var $REPOSITORY_URI"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - PROD_URI=$REPOSITORY_URI/production
      - STAG_URI=$REPOSITORY_URI/staging
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Production Docker image...
      - docker build -t $PROD_URI:latest --build-arg TARGET_ENVIRONMENT=production --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY -f docker/Dockerfile . 
      - docker tag $PROD_URI:latest $PROD_URI:$IMAGE_TAG
      - echo Building the Staging Docker image...
      - docker build -t $STAG_URI:latest --build-arg TARGET_ENVIRONMENT=staging --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY -f docker/Dockerfile . 
      - docker tag $STAG_URI:latest $STAG_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $PROD_URI:$IMAGE_TAG
      - docker push $PROD_URI:latest
      - docker push $STAG_URI:$IMAGE_TAG
      - docker push $STAG_URI:latest
      - echo "[{\"name\":\"rails-resume-prod\",\"imageUri\":\"$PROD_URI:$IMAGE_TAG\"},{\"name\":\"rails-resume-staging\",\"imageUri\":\"$STAG_URI:$IMAGE_TAG\"}]"
      - echo "[{\"name\":\"rails-resume-prod\",\"imageUri\":\"$PROD_URI:$IMAGE_TAG\"}]" > production.json
      - echo "[{\"name\":\"rails-resume-staging\",\"imageUri\":\"$STAG_URI:$IMAGE_TAG\"}]" > staging.json
artifacts:
  files:
    - production.json
    - staging.json
